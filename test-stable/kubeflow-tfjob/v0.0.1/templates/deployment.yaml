apiVersion: "kubeflow.org/{{ .Values.tfjob.version }}"
kind: "TFJob"
metadata:
  name: {{ template "tf-job.fullname" . }}
  labels:
    app: {{ template "tf-job.name" . }}
    chart: {{ template "tf-job.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  tfReplicaSpecs:
    PS:
      replicas: {{ .Values.ps.number}}
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - image: "{{ .Values.ps.image.repository }}:{{ .Values.ps.image.tag }}"
{{- if eq "" .Values.exec.command }}
            #command: ""
{{- else }}
            command: {{ toYaml .Values.exec.command | indent 14 }}
{{- end }}
{{- if .Values.exec.args }}
            args:
{{ toYaml .Values.exec.args | indent 14 }}
{{- end }}
            name: tensorflow
            ports:
            - containerPort: 2222
              name: tfjob-port
            resources:
              limits:
                cpu: '0.5'
            workingDir: /opt/tf-benchmarks/scripts/tf_cnn_benchmarks
            volumeMounts:
              - mountPath: {{ .Values.persistent.path }}
                name: nfs-pv-storage
          restartPolicy: OnFailure
          volumes:
          - name: nfs-pv-storage
          {{- if .Values.persistent.enable }}
            persistentVolumeClaim:
              claimName: {{ .Values.persistent.pvc }}
          {{- else }}
            emptyDir: {}
          {{ end }}
    Worker:
      replicas: {{ .Values.worker.number}}
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}"
{{- if eq "" .Values.exec.command }}
            #command: ""
{{- else }}
            command: {{ toYaml .Values.exec.command | indent 14 }}
{{- end }}
{{- if .Values.exec.args }}
            args: 
{{ toYaml .Values.exec.args | indent 14 }}
{{- end }}
            name: tensorflow
            ports:
            - containerPort: 2222
              name: tfjob-port
            resources:
              limits:
                nvidia.com/gpu: {{ .Values.worker.gpuNumber }}
            workingDir: /opt/tf-benchmarks/scripts/tf_cnn_benchmarks
            volumeMounts:
              - mountPath: {{ .Values.persistent.path }}
                name: nfs-pv-storage
          restartPolicy: OnFailure      
          volumes:
          - name: nfs-pv-storage
          {{- if .Values.persistent.enable }}
            persistentVolumeClaim:
              claimName: {{ .Values.persistent.pvc }}
          {{- else }}
            emptyDir: {}
          {{ end }}
